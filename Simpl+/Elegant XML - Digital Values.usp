//Christopher McNeely
//Elegant Video and Soundworks

//____Compiler Directives____

#SYMBOL_NAME "Elegant XML - Digital Values"
#ENABLE_STACK_CHECKING
#DEFAULT_VOLATILE
#CATEGORY "46" "Elegant Modules"
#DEFINE_CONSTANT MaxItems 50
#DIGITAL_EXPAND AllWithAny
#HELP_PDF_FILE "Elegant XML - Digital Values.pdf"

#INCLUDEPATH ""
#USER_SIMPLSHARP_LIBRARY "ElegantXML"

#Help_Begin

#Help_End

//____Inputs/Outputs
DIGITAL_INPUT _SKIP_,_SKIP_,_SKIP_,InputValue[MaxItems];
DIGITAL_OUTPUT _SKIP_,IsInitialized,_SKIP_,OutputValue[MaxItems];
INTEGER_PARAMETER ManagerID;
STRING_PARAMETER _SKIP_,_SKIP_,XmlPath[MaxItems][512];

#BEGIN_PARAMETER_PROPERTIES ManagerID
    propValidUnits = unitDecimal;
    propDefaultUnit = unitDecimal;
    propDefaultValue = 1d;    
    propList = {1d, "Processor 1"}, {2d, "Processor 2"}, {3d, "Processor 3"}, {4d, "Processor 4"}, {5d, "Processor 5"};
#END_PARAMETER_PROPERTIES

DigitalProcessor processor;

//____Functions____
callback function ProcessValueChange(integer id, integer value)
{
    OutputValue[id] = value;
}

callback function ProcessIsInitialized(integer state)
{
    IsInitialized = state;
}

//____Events____
PUSH InputValue
{
    integer i;
    if(processor.IsProcessorInitialized = 0) { return; }
    i = GetLastModifiedArrayIndex();
    processor.ToggleValue(i);
}

//____Start-Up Code____
FUNCTION Main() {
    integer i;
    WaitForInitializationComplete();
    while(processor.IsManagerReady(ManagerID) = 0)
    {
         Delay(1000);
    }
    RegisterDelegate(processor, ReportValueChange, ProcessValueChange);
    RegisterDelegate(processor, ReportIsInitialized, ProcessIsInitialized);
    
    for(i = 1 to MaxItems)
    {
        if(IsSignalDefined(OutputValue[i]) && XmlPath[i] <> "")
        {
             processor.AddValue(i, XmlPath[i], InputValue[i]);
        }
    }   
    processor.Sort();
    processor.Initialize(ManagerID);
}
